name: Go

env:
  # NOTE: use the same version as go-spacemesh
  go-version: "1.19"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.go-version }}

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  build-on-arm-emu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: pguyot/arm-runner-action@v2.5.2
      with:
        base_image: raspios_lite_arm64:latest
        image_additional_mb: 1024
        commands: |
          #apt-get install --no-install-recommends -y golang
          apt-get install --no-install-recommends -y snapd
          #wget https://go.dev/dl/go1.19.5.darwin-arm64.tar.gz
          #tar -xvf go1.19.5.darwin-arm64.tar.gz
          #sudo mv go /usr/local
          #/usr/local/go/bin/go build -v ./...
          #/usr/local/go/bin/go test -v ./...
          sudo snap install --classic --channel=${{ env.go-version }}/stable go
          go build -v ./...
          go test -v ./...

  build-on-arm:
    runs-on: [self-hosted, linux-arm64]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.go-version }}

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
